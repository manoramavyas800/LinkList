    static Node reverse(Node head) {
        Node curr = head;
        Node prev = null;
        Node after = null;
        while (curr != null) {
            after = curr.next;
            curr.next = prev;
            prev = curr;
            curr = after;
        }
        return prev;
    }
    static int twinSum(Node head) {
       int m=Integer.MIN_VALUE;
       Node slow = head;
       Node fast = head;
       while (fast.next != null && fast.next.next != null) {
           slow = slow.next;
           fast = fast.next.next;
       }
       Node temp = reverse(slow.next);
       slow.next = temp;
       Node p1=head;
       Node p2=slow.next;
       while(p2!=null){
           int sum=p1.data+p2.data;
           if(sum>m){
               m=sum;
           }
           p1=p1.next;
           p2=p2.next;
       }
       return m;

    }
